"use strict";

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.bulkInsert("Cards", [
      {
        themeId: 1,
        answer: 'жеребец',
        question: 'Какое животное является символом долголетия в китайской культуре?',
        points: 200,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 1,
        answer: 'гепард',
        question: 'ак называется самое быстрое сухопутное животное?',
        points: 400,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 1,
        answer: 'лев',
        question: ' Какой вид крупных кошачьих обычно охотится на слонов?',
        points: 600,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 1,
        answer: 'медведь',
        question: 'Какое животное является национальным символом России?',
        points: 800,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 1,
        answer: 'песец',
        question: 'Как называется наименьшая из кошачьих диких кошек?',
        points: 1000,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 2,
        answer: '5642',
        question: 'Какая высота Эльбруса, самой высокой горы в России?',
        points: 200,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 2,
        answer: 'кавказский хребет',
        question: 'Какой хребет Кавказских гор проходит через Эльбрус?',
        points: 400,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 2,
        answer: 'восточный и западный',
        question: 'Как называется северный и южный пик Эльбруса?',
        points: 600,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 2,
        answer: 'кабардино-балкария',
        question: 'В каком регионе находится гора Эльбрус?',
        points: 800,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 2,
        answer: 'спящий вулкан',
        question: 'Какой тип вулканического комплекса представляет собой Эльбрус?',
        points: 1000,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 3,
        answer: 'буйвол',
        question: 'Какое животное считается национальным млекопитающим США и символом западного пограничья?',
        points: 200,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 3,
        answer: 'бизон',
        question: ' Какой тип буйвола является самым крупным и распространенным?',
        points: 400,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 3,
        answer: 'северная америка',
        question: 'В каких регионах мира обычно встречаются буйволы?',
        points: 600,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 3,
        answer: 'стадо',
        question: 'Как называется группа буйволов?',
        points: 800,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 3,
        answer: 'буйвол',
        question: 'Какое животное считается национальным символом Канады?',
        points: 1000,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 4,
        answer: 'setState',
        question: 'Как называется основной метод, который используется для изменения состояния компонента в React?',
        points: 200,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 4,
        answer: 'componentDidMount',
        question: 'Какой метод жизненного цикла React вызывается сразу после монтирования компонента?',
        points: 400,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 4,
        answer: 'Redux',
        question: 'Как называется библиотека, используемая в React для управления состоянием приложения?',
        points: 600,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 4,
        answer: 'useMemo',
        question: 'Какая функция позволяет оптимизировать производительность в React, предотвращая повторное рендеринг компонента?',
        points: 800,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 4,
        answer: 'portals',
        question: 'Как называется фича в React, позволяющая создавать многокомпонентные интерфейсы, не меняя их иерархию?',
        points: 1000,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 5,
        answer: 'document.querySelector',
        question: 'Какой метод используется для выбора элемента из DOM?',
        points: 200,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 5,
        answer: 'appendChild',
        question: 'Как называется метод для добавления нового элемента в конец родительского элемента?',
        points: 400,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 5,
        answer: 'addEventListener',
        question: 'Каким образом можно добавить обработчик события к элементу?',
        points: 600,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 5,
        answer: 'innerText',
        question: 'Каким образом можно изменить текстовое содержимое элемента?',
        points: 800,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        themeId: 5,
        answer: 'removeChild',
        question: 'Какой метод используется для удаления элемента из DOM?',
        points: 1000,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete("Cards", null, {});
  },
};
